# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'image.ui'
##
## Created by: Qt User Interface Compiler version 6.8.2
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QApplication, QGroupBox, QLCDNumber, QLabel,
    QMainWindow, QMenu, QMenuBar, QPushButton,
    QRadioButton, QSizePolicy, QSlider, QSpinBox,
    QStatusBar, QTabWidget, QTextBrowser, QTextEdit,
    QToolBar, QVBoxLayout, QWidget)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(1502, 987)
        MainWindow.setMinimumSize(QSize(640, 480))
        MainWindow.setMaximumSize(QSize(1729, 990))
        MainWindow.setSizeIncrement(QSize(10, 10))
        icon = QIcon()
        icon.addFile(u":/newPrefix/Icons/Mao48x48.ico", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setIconSize(QSize(48, 48))
        self.openAct = QAction(MainWindow)
        self.openAct.setObjectName(u"openAct")
        icon1 = QIcon()
        icon1.addFile(u"Icons/Open1.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.openAct.setIcon(icon1)
        self.saveAct = QAction(MainWindow)
        self.saveAct.setObjectName(u"saveAct")
        icon2 = QIcon()
        icon2.addFile(u"Icons/Save.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.saveAct.setIcon(icon2)
        self.closeAct = QAction(MainWindow)
        self.closeAct.setObjectName(u"closeAct")
        icon3 = QIcon()
        icon3.addFile(u"Icons/Close.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.closeAct.setIcon(icon3)
        self.aboutAct = QAction(MainWindow)
        self.aboutAct.setObjectName(u"aboutAct")
        icon4 = QIcon()
        icon4.addFile(u"Icons/About.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.aboutAct.setIcon(icon4)
        self.operatingModeAct = QAction(MainWindow)
        self.operatingModeAct.setObjectName(u"operatingModeAct")
        icon5 = QIcon()
        icon5.addFile(u"Icons/Procedure.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.operatingModeAct.setIcon(icon5)
        self.adjustmentAct = QAction(MainWindow)
        self.adjustmentAct.setObjectName(u"adjustmentAct")
        icon6 = QIcon()
        icon6.addFile(u"Icons/Tools.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.adjustmentAct.setIcon(icon6)
        self.openImg2Act = QAction(MainWindow)
        self.openImg2Act.setObjectName(u"openImg2Act")
        icon7 = QIcon()
        icon7.addFile(u"Icons/Open2.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.openImg2Act.setIcon(icon7)
        self.printAct = QAction(MainWindow)
        self.printAct.setObjectName(u"printAct")
        icon8 = QIcon()
        icon8.addFile(u"Icons/Print.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.printAct.setIcon(icon8)
        self.swapAct = QAction(MainWindow)
        self.swapAct.setObjectName(u"swapAct")
        icon9 = QIcon()
        icon9.addFile(u"Icons/Swap.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.swapAct.setIcon(icon9)
        self.copy1Act = QAction(MainWindow)
        self.copy1Act.setObjectName(u"copy1Act")
        icon10 = QIcon()
        icon10.addFile(u"Icons/Copy1to2 .png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.copy1Act.setIcon(icon10)
        self.copy2Act = QAction(MainWindow)
        self.copy2Act.setObjectName(u"copy2Act")
        icon11 = QIcon()
        icon11.addFile(u"Icons/Copy2to1.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.copy2Act.setIcon(icon11)
        self.frenchAct = QAction(MainWindow)
        self.frenchAct.setObjectName(u"frenchAct")
        icon12 = QIcon()
        icon12.addFile(u"Icons/France.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.frenchAct.setIcon(icon12)
        self.englishAct = QAction(MainWindow)
        self.englishAct.setObjectName(u"englishAct")
        icon13 = QIcon()
        icon13.addFile(u"Icons/UK.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.englishAct.setIcon(icon13)
        self.centralWidget = QWidget(MainWindow)
        self.centralWidget.setObjectName(u"centralWidget")
        self.groupBoxLocalFilters = QGroupBox(self.centralWidget)
        self.groupBoxLocalFilters.setObjectName(u"groupBoxLocalFilters")
        self.groupBoxLocalFilters.setGeometry(QRect(950, 10, 171, 551))
        self.pushButtonLuminance = QPushButton(self.groupBoxLocalFilters)
        self.pushButtonLuminance.setObjectName(u"pushButtonLuminance")
        self.pushButtonLuminance.setGeometry(QRect(10, 90, 151, 23))
        self.pushButtonWindowing = QPushButton(self.groupBoxLocalFilters)
        self.pushButtonWindowing.setObjectName(u"pushButtonWindowing")
        self.pushButtonWindowing.setGeometry(QRect(10, 390, 151, 23))
        self.pushButtonThresholding = QPushButton(self.groupBoxLocalFilters)
        self.pushButtonThresholding.setObjectName(u"pushButtonThresholding")
        self.pushButtonThresholding.setGeometry(QRect(10, 180, 151, 23))
        self.pushButtonBinarization = QPushButton(self.groupBoxLocalFilters)
        self.pushButtonBinarization.setObjectName(u"pushButtonBinarization")
        self.pushButtonBinarization.setGeometry(QRect(10, 210, 151, 23))
        self.pushButtonNegative = QPushButton(self.groupBoxLocalFilters)
        self.pushButtonNegative.setObjectName(u"pushButtonNegative")
        self.pushButtonNegative.setGeometry(QRect(10, 240, 151, 23))
        self.pushButtonRedFilter = QPushButton(self.groupBoxLocalFilters)
        self.pushButtonRedFilter.setObjectName(u"pushButtonRedFilter")
        self.pushButtonRedFilter.setGeometry(QRect(10, 300, 151, 23))
        self.pushButtonGreenFilter = QPushButton(self.groupBoxLocalFilters)
        self.pushButtonGreenFilter.setObjectName(u"pushButtonGreenFilter")
        self.pushButtonGreenFilter.setGeometry(QRect(10, 330, 151, 23))
        self.pushButtonBlueFilter = QPushButton(self.groupBoxLocalFilters)
        self.pushButtonBlueFilter.setObjectName(u"pushButtonBlueFilter")
        self.pushButtonBlueFilter.setGeometry(QRect(10, 360, 151, 23))
        self.pushButtonTransparency = QPushButton(self.groupBoxLocalFilters)
        self.pushButtonTransparency.setObjectName(u"pushButtonTransparency")
        self.pushButtonTransparency.setGeometry(QRect(10, 270, 151, 23))
        self.pushButtonBrightness = QPushButton(self.groupBoxLocalFilters)
        self.pushButtonBrightness.setObjectName(u"pushButtonBrightness")
        self.pushButtonBrightness.setGeometry(QRect(10, 30, 151, 23))
        self.pushButtonContrast = QPushButton(self.groupBoxLocalFilters)
        self.pushButtonContrast.setObjectName(u"pushButtonContrast")
        self.pushButtonContrast.setGeometry(QRect(10, 60, 151, 23))
        self.pushButtonRGB = QPushButton(self.groupBoxLocalFilters)
        self.pushButtonRGB.setObjectName(u"pushButtonRGB")
        self.pushButtonRGB.setGeometry(QRect(10, 120, 151, 23))
        self.pushButtonRedEffect = QPushButton(self.groupBoxLocalFilters)
        self.pushButtonRedEffect.setObjectName(u"pushButtonRedEffect")
        self.pushButtonRedEffect.setGeometry(QRect(10, 150, 151, 23))
        self.pushButtonGreyLevel = QPushButton(self.groupBoxLocalFilters)
        self.pushButtonGreyLevel.setObjectName(u"pushButtonGreyLevel")
        self.pushButtonGreyLevel.setGeometry(QRect(10, 420, 151, 23))
        self.pushButtonColorLevel = QPushButton(self.groupBoxLocalFilters)
        self.pushButtonColorLevel.setObjectName(u"pushButtonColorLevel")
        self.pushButtonColorLevel.setGeometry(QRect(10, 450, 151, 23))
        self.pushButtonFalseColors = QPushButton(self.groupBoxLocalFilters)
        self.pushButtonFalseColors.setObjectName(u"pushButtonFalseColors")
        self.pushButtonFalseColors.setGeometry(QRect(10, 480, 151, 22))
        self.pushButtonSepia = QPushButton(self.groupBoxLocalFilters)
        self.pushButtonSepia.setObjectName(u"pushButtonSepia")
        self.pushButtonSepia.setGeometry(QRect(10, 510, 151, 23))
        self.sliderA = QSlider(self.centralWidget)
        self.sliderA.setObjectName(u"sliderA")
        self.sliderA.setGeometry(QRect(110, 600, 201, 20))
        self.sliderA.setMaximum(100)
        self.sliderA.setValue(50)
        self.sliderA.setOrientation(Qt.Orientation.Horizontal)
        self.sliderB = QSlider(self.centralWidget)
        self.sliderB.setObjectName(u"sliderB")
        self.sliderB.setGeometry(QRect(110, 630, 201, 20))
        self.sliderB.setMaximum(100)
        self.sliderB.setValue(50)
        self.sliderB.setOrientation(Qt.Orientation.Horizontal)
        self.labelA = QLabel(self.centralWidget)
        self.labelA.setObjectName(u"labelA")
        self.labelA.setGeometry(QRect(10, 600, 91, 21))
        self.labelB = QLabel(self.centralWidget)
        self.labelB.setObjectName(u"labelB")
        self.labelB.setGeometry(QRect(10, 630, 91, 21))
        self.LcdA = QLCDNumber(self.centralWidget)
        self.LcdA.setObjectName(u"LcdA")
        self.LcdA.setGeometry(QRect(320, 600, 64, 23))
        self.LcdA.setStyleSheet(u"#LcdA {\n"
" color: red;\n"
" background-color: yellow;\n"
" }")
        self.LcdA.setProperty(u"value", 50.000000000000000)
        self.LcdB = QLCDNumber(self.centralWidget)
        self.LcdB.setObjectName(u"LcdB")
        self.LcdB.setGeometry(QRect(320, 630, 64, 23))
        self.LcdB.setStyleSheet(u"#LcdB {\n"
"color: red;\n"
"background-color: yellow;\n"
"}")
        self.LcdB.setProperty(u"value", 50.000000000000000)
        self.LcdC = QLCDNumber(self.centralWidget)
        self.LcdC.setObjectName(u"LcdC")
        self.LcdC.setGeometry(QRect(320, 660, 64, 23))
        self.LcdC.setStyleSheet(u"#LcdC {\n"
" color: red;\n"
"background-color: yellow;\n"
" }")
        self.LcdC.setProperty(u"intValue", 10)
        self.sliderC = QSlider(self.centralWidget)
        self.sliderC.setObjectName(u"sliderC")
        self.sliderC.setGeometry(QRect(110, 660, 201, 22))
        self.sliderC.setMaximum(20)
        self.sliderC.setValue(10)
        self.sliderC.setOrientation(Qt.Orientation.Horizontal)
        self.labelC = QLabel(self.centralWidget)
        self.labelC.setObjectName(u"labelC")
        self.labelC.setGeometry(QRect(10, 660, 91, 21))
        self.labelD = QLabel(self.centralWidget)
        self.labelD.setObjectName(u"labelD")
        self.labelD.setGeometry(QRect(400, 600, 71, 21))
        self.sliderD = QSlider(self.centralWidget)
        self.sliderD.setObjectName(u"sliderD")
        self.sliderD.setGeometry(QRect(480, 600, 201, 22))
        self.sliderD.setMinimum(1)
        self.sliderD.setMaximum(99)
        self.sliderD.setValue(50)
        self.sliderD.setSliderPosition(50)
        self.sliderD.setOrientation(Qt.Orientation.Horizontal)
        self.LcdD = QLCDNumber(self.centralWidget)
        self.LcdD.setObjectName(u"LcdD")
        self.LcdD.setGeometry(QRect(690, 600, 64, 23))
        self.LcdD.setStyleSheet(u"#LcdD {\n"
" color: white;\n"
" background-color: red;\n"
" }")
        self.LcdD.setProperty(u"value", 50.000000000000000)
        self.lcdWidthImage1 = QLCDNumber(self.centralWidget)
        self.lcdWidthImage1.setObjectName(u"lcdWidthImage1")
        self.lcdWidthImage1.setGeometry(QRect(170, 690, 81, 31))
        self.lcdWidthImage1.setStyleSheet(u"#lcdLargeur {\n"
" color: red;\n"
" background-color: white;\n"
" }")
        self.labelWidthImage1 = QLabel(self.centralWidget)
        self.labelWidthImage1.setObjectName(u"labelWidthImage1")
        self.labelWidthImage1.setGeometry(QRect(10, 690, 141, 31))
        self.labelHeightImage1 = QLabel(self.centralWidget)
        self.labelHeightImage1.setObjectName(u"labelHeightImage1")
        self.labelHeightImage1.setGeometry(QRect(10, 730, 141, 31))
        self.lcdHeightImage1 = QLCDNumber(self.centralWidget)
        self.lcdHeightImage1.setObjectName(u"lcdHeightImage1")
        self.lcdHeightImage1.setGeometry(QRect(170, 730, 81, 31))
        self.lcdHeightImage1.setStyleSheet(u"#lcdHauteur {\n"
" color: red;\n"
" background-color: white;\n"
" }")
        self.labelDepthImage1 = QLabel(self.centralWidget)
        self.labelDepthImage1.setObjectName(u"labelDepthImage1")
        self.labelDepthImage1.setGeometry(QRect(10, 770, 161, 31))
        self.lcdDepthImage1 = QLCDNumber(self.centralWidget)
        self.lcdDepthImage1.setObjectName(u"lcdDepthImage1")
        self.lcdDepthImage1.setGeometry(QRect(170, 770, 81, 31))
        self.lcdDepthImage1.setStyleSheet(u"#lcdDepth {\n"
" color: red;\n"
" background-color: white;\n"
" }")
        self.tabWidget = QTabWidget(self.centralWidget)
        self.tabWidget.setObjectName(u"tabWidget")
        self.tabWidget.setGeometry(QRect(10, 0, 750, 565))
        self.tab = QWidget()
        self.tab.setObjectName(u"tab")
        self.imageLabel = QLabel(self.tab)
        self.imageLabel.setObjectName(u"imageLabel")
        self.imageLabel.setGeometry(QRect(25, 5, 700, 525))
        self.imageLabel.setStyleSheet(u"#imageLabel {\n"
"border: 3px solid gray;\n"
"border-radius: 20px;\n"
"background: white;\n"
"}")
        self.imageLabel.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.imageLabel.setMargin(5)
        self.tabWidget.addTab(self.tab, "")
        self.tab_4 = QWidget()
        self.tab_4.setObjectName(u"tab_4")
        self.image2Label = QLabel(self.tab_4)
        self.image2Label.setObjectName(u"image2Label")
        self.image2Label.setGeometry(QRect(25, 5, 700, 525))
        self.image2Label.setStyleSheet(u"#image2Label {\n"
"border: 3px solid gray;\n"
"border-radius: 20px;\n"
"background: white;\n"
"}")
        self.image2Label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.tabWidget.addTab(self.tab_4, "")
        self.tab_2 = QWidget()
        self.tab_2.setObjectName(u"tab_2")
        self.message = QTextEdit(self.tab_2)
        self.message.setObjectName(u"message")
        self.message.setGeometry(QRect(25, 5, 700, 525))
        self.message.setReadOnly(True)
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_7 = QWidget()
        self.tab_7.setObjectName(u"tab_7")
        self.verticalLayoutWidget = QWidget(self.tab_7)
        self.verticalLayoutWidget.setObjectName(u"verticalLayoutWidget")
        self.verticalLayoutWidget.setGeometry(QRect(10, 10, 721, 511))
        self.histogramLayout = QVBoxLayout(self.verticalLayoutWidget)
        self.histogramLayout.setSpacing(6)
        self.histogramLayout.setContentsMargins(11, 11, 11, 11)
        self.histogramLayout.setObjectName(u"histogramLayout")
        self.histogramLayout.setContentsMargins(0, 0, 0, 0)
        self.tabWidget.addTab(self.tab_7, "")
        self.tab_3 = QWidget()
        self.tab_3.setObjectName(u"tab_3")
        self.modOpTextBrowser = QTextBrowser(self.tab_3)
        self.modOpTextBrowser.setObjectName(u"modOpTextBrowser")
        self.modOpTextBrowser.setGeometry(QRect(25, 5, 700, 525))
        self.tabWidget.addTab(self.tab_3, "")
        self.sliderE = QSlider(self.centralWidget)
        self.sliderE.setObjectName(u"sliderE")
        self.sliderE.setGeometry(QRect(480, 630, 201, 22))
        self.sliderE.setMinimum(1)
        self.sliderE.setValue(50)
        self.sliderE.setOrientation(Qt.Orientation.Horizontal)
        self.lcdE = QLCDNumber(self.centralWidget)
        self.lcdE.setObjectName(u"lcdE")
        self.lcdE.setGeometry(QRect(690, 630, 64, 23))
        self.lcdE.setStyleSheet(u"#lcdE {\n"
" color: white;\n"
" background-color: green;\n"
" }")
        self.lcdE.setProperty(u"value", 50.000000000000000)
        self.labelE = QLabel(self.centralWidget)
        self.labelE.setObjectName(u"labelE")
        self.labelE.setGeometry(QRect(400, 630, 71, 21))
        self.sliderF = QSlider(self.centralWidget)
        self.sliderF.setObjectName(u"sliderF")
        self.sliderF.setGeometry(QRect(480, 660, 201, 22))
        self.sliderF.setMinimum(1)
        self.sliderF.setValue(50)
        self.sliderF.setOrientation(Qt.Orientation.Horizontal)
        self.labelF = QLabel(self.centralWidget)
        self.labelF.setObjectName(u"labelF")
        self.labelF.setGeometry(QRect(400, 660, 71, 21))
        self.lcdF = QLCDNumber(self.centralWidget)
        self.lcdF.setObjectName(u"lcdF")
        self.lcdF.setGeometry(QRect(690, 660, 64, 23))
        self.lcdF.setStyleSheet(u"#lcdF {\n"
" color: white;\n"
" background-color: blue;\n"
" }")
        self.lcdF.setProperty(u"value", 50.000000000000000)
        self.labelMessage = QLabel(self.centralWidget)
        self.labelMessage.setObjectName(u"labelMessage")
        self.labelMessage.setGeometry(QRect(10, 890, 761, 31))
        self.spinBoxPoint = QSpinBox(self.centralWidget)
        self.spinBoxPoint.setObjectName(u"spinBoxPoint")
        self.spinBoxPoint.setGeometry(QRect(170, 810, 88, 31))
        self.spinBoxPoint.setMinimum(1)
        self.spinBoxPoint.setMaximum(7)
        self.labelPointsNumber = QLabel(self.centralWidget)
        self.labelPointsNumber.setObjectName(u"labelPointsNumber")
        self.labelPointsNumber.setGeometry(QRect(10, 810, 151, 31))
        self.spinBoxSeed = QSpinBox(self.centralWidget)
        self.spinBoxSeed.setObjectName(u"spinBoxSeed")
        self.spinBoxSeed.setGeometry(QRect(430, 810, 88, 31))
        self.spinBoxSeed.setMinimum(10)
        self.spinBoxSeed.setMaximum(10000)
        self.spinBoxSeed.setValue(100)
        self.labelSeed = QLabel(self.centralWidget)
        self.labelSeed.setObjectName(u"labelSeed")
        self.labelSeed.setGeometry(QRect(270, 810, 151, 31))
        self.copyright = QLabel(self.centralWidget)
        self.copyright.setObjectName(u"copyright")
        self.copyright.setGeometry(QRect(1230, 880, 251, 31))
        self.copyright.setAlignment(Qt.AlignmentFlag.AlignRight|Qt.AlignmentFlag.AlignTrailing|Qt.AlignmentFlag.AlignVCenter)
        self.labelWidthImage2 = QLabel(self.centralWidget)
        self.labelWidthImage2.setObjectName(u"labelWidthImage2")
        self.labelWidthImage2.setGeometry(QRect(270, 690, 151, 31))
        self.labelHeightImage2 = QLabel(self.centralWidget)
        self.labelHeightImage2.setObjectName(u"labelHeightImage2")
        self.labelHeightImage2.setGeometry(QRect(270, 730, 151, 31))
        self.labelDepthImage2 = QLabel(self.centralWidget)
        self.labelDepthImage2.setObjectName(u"labelDepthImage2")
        self.labelDepthImage2.setGeometry(QRect(270, 770, 151, 31))
        self.lcdWidthImage2 = QLCDNumber(self.centralWidget)
        self.lcdWidthImage2.setObjectName(u"lcdWidthImage2")
        self.lcdWidthImage2.setGeometry(QRect(430, 690, 81, 31))
        self.lcdWidthImage2.setStyleSheet(u"#lcdLargeur2 {\n"
" color: blue;\n"
" background-color: white;\n"
" }")
        self.lcdHeightImage2 = QLCDNumber(self.centralWidget)
        self.lcdHeightImage2.setObjectName(u"lcdHeightImage2")
        self.lcdHeightImage2.setGeometry(QRect(430, 730, 81, 31))
        self.lcdHeightImage2.setStyleSheet(u"#lcdHauteur2 {\n"
" color: blue;\n"
" background-color: white;\n"
" }")
        self.lcdDepthImage2 = QLCDNumber(self.centralWidget)
        self.lcdDepthImage2.setObjectName(u"lcdDepthImage2")
        self.lcdDepthImage2.setGeometry(QRect(430, 770, 81, 31))
        self.lcdDepthImage2.setStyleSheet(u"#lcdDepth2 {\n"
" color: blue;\n"
" background-color: white;\n"
" }")
        self.spinBoxFilter = QSpinBox(self.centralWidget)
        self.spinBoxFilter.setObjectName(u"spinBoxFilter")
        self.spinBoxFilter.setGeometry(QRect(170, 850, 88, 31))
        self.spinBoxFilter.setMinimum(3)
        self.spinBoxFilter.setMaximum(9)
        self.spinBoxFilter.setSingleStep(2)
        self.Size = QLabel(self.centralWidget)
        self.Size.setObjectName(u"Size")
        self.Size.setGeometry(QRect(10, 850, 111, 31))
        self.groupBoxHistogram = QGroupBox(self.centralWidget)
        self.groupBoxHistogram.setObjectName(u"groupBoxHistogram")
        self.groupBoxHistogram.setGeometry(QRect(530, 690, 231, 151))
        self.radioButtonRed = QRadioButton(self.groupBoxHistogram)
        self.radioButtonRed.setObjectName(u"radioButtonRed")
        self.radioButtonRed.setGeometry(QRect(10, 30, 91, 21))
        self.radioButtonGreen = QRadioButton(self.groupBoxHistogram)
        self.radioButtonGreen.setObjectName(u"radioButtonGreen")
        self.radioButtonGreen.setGeometry(QRect(10, 60, 91, 21))
        self.radioButtonBlue = QRadioButton(self.groupBoxHistogram)
        self.radioButtonBlue.setObjectName(u"radioButtonBlue")
        self.radioButtonBlue.setGeometry(QRect(10, 90, 91, 21))
        self.radioButtonLuminance = QRadioButton(self.groupBoxHistogram)
        self.radioButtonLuminance.setObjectName(u"radioButtonLuminance")
        self.radioButtonLuminance.setGeometry(QRect(10, 120, 91, 21))
        self.radioButtonLuminance.setChecked(True)
        self.pushButtonHistogram = QPushButton(self.groupBoxHistogram)
        self.pushButtonHistogram.setObjectName(u"pushButtonHistogram")
        self.pushButtonHistogram.setGeometry(QRect(110, 120, 111, 23))
        self.groupBoxGeometricTransformation = QGroupBox(self.centralWidget)
        self.groupBoxGeometricTransformation.setObjectName(u"groupBoxGeometricTransformation")
        self.groupBoxGeometricTransformation.setGeometry(QRect(770, 10, 171, 551))
        self.pushButtonVerticalSymmetry = QPushButton(self.groupBoxGeometricTransformation)
        self.pushButtonVerticalSymmetry.setObjectName(u"pushButtonVerticalSymmetry")
        self.pushButtonVerticalSymmetry.setGeometry(QRect(10, 30, 151, 23))
        self.pushButtonHorizontalSymmetry = QPushButton(self.groupBoxGeometricTransformation)
        self.pushButtonHorizontalSymmetry.setObjectName(u"pushButtonHorizontalSymmetry")
        self.pushButtonHorizontalSymmetry.setGeometry(QRect(10, 60, 151, 23))
        self.pushButtonRotation90 = QPushButton(self.groupBoxGeometricTransformation)
        self.pushButtonRotation90.setObjectName(u"pushButtonRotation90")
        self.pushButtonRotation90.setGeometry(QRect(10, 90, 151, 23))
        self.pushButtonDiagonalization = QPushButton(self.groupBoxGeometricTransformation)
        self.pushButtonDiagonalization.setObjectName(u"pushButtonDiagonalization")
        self.pushButtonDiagonalization.setGeometry(QRect(10, 150, 151, 23))
        self.pushButtonMedallion = QPushButton(self.groupBoxGeometricTransformation)
        self.pushButtonMedallion.setObjectName(u"pushButtonMedallion")
        self.pushButtonMedallion.setGeometry(QRect(10, 180, 151, 22))
        self.pushButtonTranslation = QPushButton(self.groupBoxGeometricTransformation)
        self.pushButtonTranslation.setObjectName(u"pushButtonTranslation")
        self.pushButtonTranslation.setGeometry(QRect(10, 360, 151, 23))
        self.pushButtonZoomPlus = QPushButton(self.groupBoxGeometricTransformation)
        self.pushButtonZoomPlus.setObjectName(u"pushButtonZoomPlus")
        self.pushButtonZoomPlus.setGeometry(QRect(10, 390, 151, 23))
        self.pushButtonZoomLess = QPushButton(self.groupBoxGeometricTransformation)
        self.pushButtonZoomLess.setObjectName(u"pushButtonZoomLess")
        self.pushButtonZoomLess.setGeometry(QRect(10, 450, 151, 23))
        self.pushButtonRotation = QPushButton(self.groupBoxGeometricTransformation)
        self.pushButtonRotation.setObjectName(u"pushButtonRotation")
        self.pushButtonRotation.setGeometry(QRect(10, 120, 151, 23))
        self.pushButtonZoomPlusBilinear = QPushButton(self.groupBoxGeometricTransformation)
        self.pushButtonZoomPlusBilinear.setObjectName(u"pushButtonZoomPlusBilinear")
        self.pushButtonZoomPlusBilinear.setGeometry(QRect(10, 420, 151, 23))
        self.pushButtonCrop = QPushButton(self.groupBoxGeometricTransformation)
        self.pushButtonCrop.setObjectName(u"pushButtonCrop")
        self.pushButtonCrop.setGeometry(QRect(10, 480, 151, 23))
        self.pushButtonValidation = QPushButton(self.groupBoxGeometricTransformation)
        self.pushButtonValidation.setObjectName(u"pushButtonValidation")
        self.pushButtonValidation.setGeometry(QRect(40, 510, 91, 23))
        self.groupBoxImagesOverlay = QGroupBox(self.centralWidget)
        self.groupBoxImagesOverlay.setObjectName(u"groupBoxImagesOverlay")
        self.groupBoxImagesOverlay.setGeometry(QRect(950, 570, 171, 311))
        self.pushButtonRedBackground = QPushButton(self.groupBoxImagesOverlay)
        self.pushButtonRedBackground.setObjectName(u"pushButtonRedBackground")
        self.pushButtonRedBackground.setGeometry(QRect(10, 30, 151, 22))
        self.pushButtonGreenBackground = QPushButton(self.groupBoxImagesOverlay)
        self.pushButtonGreenBackground.setObjectName(u"pushButtonGreenBackground")
        self.pushButtonGreenBackground.setGeometry(QRect(10, 60, 151, 22))
        self.pushButtonBlueBackground = QPushButton(self.groupBoxImagesOverlay)
        self.pushButtonBlueBackground.setObjectName(u"pushButtonBlueBackground")
        self.pushButtonBlueBackground.setGeometry(QRect(10, 90, 151, 22))
        self.pushButtonGreenScreen = QPushButton(self.groupBoxImagesOverlay)
        self.pushButtonGreenScreen.setObjectName(u"pushButtonGreenScreen")
        self.pushButtonGreenScreen.setGeometry(QRect(10, 210, 151, 23))
        self.pushButtonAnaglyph = QPushButton(self.groupBoxImagesOverlay)
        self.pushButtonAnaglyph.setObjectName(u"pushButtonAnaglyph")
        self.pushButtonAnaglyph.setGeometry(QRect(10, 240, 151, 23))
        self.pushButtonOverlay1on2 = QPushButton(self.groupBoxImagesOverlay)
        self.pushButtonOverlay1on2.setObjectName(u"pushButtonOverlay1on2")
        self.pushButtonOverlay1on2.setGeometry(QRect(10, 270, 151, 21))
        self.pushButtonWhiteBackground = QPushButton(self.groupBoxImagesOverlay)
        self.pushButtonWhiteBackground.setObjectName(u"pushButtonWhiteBackground")
        self.pushButtonWhiteBackground.setGeometry(QRect(10, 120, 151, 23))
        self.pushButtonBlackBackground = QPushButton(self.groupBoxImagesOverlay)
        self.pushButtonBlackBackground.setObjectName(u"pushButtonBlackBackground")
        self.pushButtonBlackBackground.setGeometry(QRect(10, 150, 151, 23))
        self.pushButtonTintBackground = QPushButton(self.groupBoxImagesOverlay)
        self.pushButtonTintBackground.setObjectName(u"pushButtonTintBackground")
        self.pushButtonTintBackground.setGeometry(QRect(10, 180, 151, 23))
        self.groupBoxFocus = QGroupBox(self.centralWidget)
        self.groupBoxFocus.setObjectName(u"groupBoxFocus")
        self.groupBoxFocus.setGeometry(QRect(770, 570, 171, 311))
        self.pushButtonTVPattern = QPushButton(self.groupBoxFocus)
        self.pushButtonTVPattern.setObjectName(u"pushButtonTVPattern")
        self.pushButtonTVPattern.setGeometry(QRect(10, 30, 151, 23))
        self.pushButtonBWTVPattern = QPushButton(self.groupBoxFocus)
        self.pushButtonBWTVPattern.setObjectName(u"pushButtonBWTVPattern")
        self.pushButtonBWTVPattern.setGeometry(QRect(10, 60, 151, 23))
        self.pushButtonDisplayCode = QPushButton(self.groupBoxFocus)
        self.pushButtonDisplayCode.setObjectName(u"pushButtonDisplayCode")
        self.pushButtonDisplayCode.setGeometry(QRect(10, 90, 151, 22))
        self.pushButtonTest1 = QPushButton(self.groupBoxFocus)
        self.pushButtonTest1.setObjectName(u"pushButtonTest1")
        self.pushButtonTest1.setGeometry(QRect(20, 180, 131, 22))
        self.pushButtonTest2 = QPushButton(self.groupBoxFocus)
        self.pushButtonTest2.setObjectName(u"pushButtonTest2")
        self.pushButtonTest2.setGeometry(QRect(20, 210, 131, 23))
        self.pushButtonTest4 = QPushButton(self.groupBoxFocus)
        self.pushButtonTest4.setObjectName(u"pushButtonTest4")
        self.pushButtonTest4.setGeometry(QRect(20, 270, 131, 23))
        self.pushButtonTest3 = QPushButton(self.groupBoxFocus)
        self.pushButtonTest3.setObjectName(u"pushButtonTest3")
        self.pushButtonTest3.setGeometry(QRect(20, 240, 131, 23))
        self.pushButtonDepth1to4 = QPushButton(self.groupBoxFocus)
        self.pushButtonDepth1to4.setObjectName(u"pushButtonDepth1to4")
        self.pushButtonDepth1to4.setGeometry(QRect(10, 120, 151, 25))
        self.pushButtonDepth4to1 = QPushButton(self.groupBoxFocus)
        self.pushButtonDepth4to1.setObjectName(u"pushButtonDepth4to1")
        self.pushButtonDepth4to1.setGeometry(QRect(10, 150, 151, 25))
        self.groupBoxEncryption = QGroupBox(self.centralWidget)
        self.groupBoxEncryption.setObjectName(u"groupBoxEncryption")
        self.groupBoxEncryption.setGeometry(QRect(1130, 10, 171, 391))
        self.pushButtonPixellation = QPushButton(self.groupBoxEncryption)
        self.pushButtonPixellation.setObjectName(u"pushButtonPixellation")
        self.pushButtonPixellation.setGeometry(QRect(10, 30, 151, 23))
        self.pushButtonEncryption = QPushButton(self.groupBoxEncryption)
        self.pushButtonEncryption.setObjectName(u"pushButtonEncryption")
        self.pushButtonEncryption.setGeometry(QRect(10, 60, 151, 23))
        self.pushButtonFixedEncryption = QPushButton(self.groupBoxEncryption)
        self.pushButtonFixedEncryption.setObjectName(u"pushButtonFixedEncryption")
        self.pushButtonFixedEncryption.setGeometry(QRect(10, 90, 151, 23))
        self.pushButtonDecryption = QPushButton(self.groupBoxEncryption)
        self.pushButtonDecryption.setObjectName(u"pushButtonDecryption")
        self.pushButtonDecryption.setGeometry(QRect(10, 120, 151, 23))
        self.pushButtonHideSecret = QPushButton(self.groupBoxEncryption)
        self.pushButtonHideSecret.setObjectName(u"pushButtonHideSecret")
        self.pushButtonHideSecret.setGeometry(QRect(10, 150, 151, 23))
        self.pushButtonShowSecret = QPushButton(self.groupBoxEncryption)
        self.pushButtonShowSecret.setObjectName(u"pushButtonShowSecret")
        self.pushButtonShowSecret.setGeometry(QRect(10, 180, 151, 23))
        self.pushButtonSteganography = QPushButton(self.groupBoxEncryption)
        self.pushButtonSteganography.setObjectName(u"pushButtonSteganography")
        self.pushButtonSteganography.setGeometry(QRect(10, 210, 151, 23))
        self.pushButtonShowText = QPushButton(self.groupBoxEncryption)
        self.pushButtonShowText.setObjectName(u"pushButtonShowText")
        self.pushButtonShowText.setGeometry(QRect(10, 240, 151, 23))
        self.pushButtonAsciiFile = QPushButton(self.groupBoxEncryption)
        self.pushButtonAsciiFile.setObjectName(u"pushButtonAsciiFile")
        self.pushButtonAsciiFile.setGeometry(QRect(10, 270, 151, 24))
        self.pushButtonPuzzle = QPushButton(self.groupBoxEncryption)
        self.pushButtonPuzzle.setObjectName(u"pushButtonPuzzle")
        self.pushButtonPuzzle.setGeometry(QRect(10, 300, 151, 24))
        self.groupBoxNoiseSimulator = QGroupBox(self.centralWidget)
        self.groupBoxNoiseSimulator.setObjectName(u"groupBoxNoiseSimulator")
        self.groupBoxNoiseSimulator.setGeometry(QRect(1130, 570, 171, 121))
        self.pushButtonWhiteNoise = QPushButton(self.groupBoxNoiseSimulator)
        self.pushButtonWhiteNoise.setObjectName(u"pushButtonWhiteNoise")
        self.pushButtonWhiteNoise.setGeometry(QRect(10, 30, 151, 23))
        self.pushButtonPepperAndSaltNoise = QPushButton(self.groupBoxNoiseSimulator)
        self.pushButtonPepperAndSaltNoise.setObjectName(u"pushButtonPepperAndSaltNoise")
        self.pushButtonPepperAndSaltNoise.setGeometry(QRect(10, 60, 151, 23))
        self.pushButtonGaussianNoise = QPushButton(self.groupBoxNoiseSimulator)
        self.pushButtonGaussianNoise.setObjectName(u"pushButtonGaussianNoise")
        self.pushButtonGaussianNoise.setGeometry(QRect(10, 90, 151, 23))
        self.groupBoxOrder = QGroupBox(self.centralWidget)
        self.groupBoxOrder.setObjectName(u"groupBoxOrder")
        self.groupBoxOrder.setGeometry(QRect(1310, 700, 171, 181))
        self.pushButtonUndo = QPushButton(self.groupBoxOrder)
        self.pushButtonUndo.setObjectName(u"pushButtonUndo")
        self.pushButtonUndo.setGeometry(QRect(10, 30, 151, 51))
        self.pushButtonUndo.setStyleSheet(u"#undoAct {\n"
" color: red;\n"
" background-color: white;\n"
" }")
        self.pushButtonReset = QPushButton(self.groupBoxOrder)
        self.pushButtonReset.setObjectName(u"pushButtonReset")
        self.pushButtonReset.setGeometry(QRect(10, 90, 151, 51))
        self.pushButtonReset.setStyleSheet(u"#initializeAct {\n"
" color: green;\n"
" background-color: white;\n"
" }")
        self.groupBoxNeighborhoodFilters = QGroupBox(self.centralWidget)
        self.groupBoxNeighborhoodFilters.setObjectName(u"groupBoxNeighborhoodFilters")
        self.groupBoxNeighborhoodFilters.setGeometry(QRect(1310, 10, 171, 391))
        self.pushButtonIntegratingFilter = QPushButton(self.groupBoxNeighborhoodFilters)
        self.pushButtonIntegratingFilter.setObjectName(u"pushButtonIntegratingFilter")
        self.pushButtonIntegratingFilter.setGeometry(QRect(10, 30, 151, 23))
        self.pushButtonMedianFilter = QPushButton(self.groupBoxNeighborhoodFilters)
        self.pushButtonMedianFilter.setObjectName(u"pushButtonMedianFilter")
        self.pushButtonMedianFilter.setGeometry(QRect(10, 60, 151, 23))
        self.pushButtonGaussianFilter = QPushButton(self.groupBoxNeighborhoodFilters)
        self.pushButtonGaussianFilter.setObjectName(u"pushButtonGaussianFilter")
        self.pushButtonGaussianFilter.setGeometry(QRect(10, 90, 151, 23))
        self.pushButtonHorizontalGradient = QPushButton(self.groupBoxNeighborhoodFilters)
        self.pushButtonHorizontalGradient.setObjectName(u"pushButtonHorizontalGradient")
        self.pushButtonHorizontalGradient.setGeometry(QRect(10, 120, 151, 23))
        self.pushButtonVerticalGradient = QPushButton(self.groupBoxNeighborhoodFilters)
        self.pushButtonVerticalGradient.setObjectName(u"pushButtonVerticalGradient")
        self.pushButtonVerticalGradient.setGeometry(QRect(10, 150, 151, 23))
        self.pushButtonBorderDetect = QPushButton(self.groupBoxNeighborhoodFilters)
        self.pushButtonBorderDetect.setObjectName(u"pushButtonBorderDetect")
        self.pushButtonBorderDetect.setGeometry(QRect(10, 180, 151, 23))
        self.pushButtonErosion = QPushButton(self.groupBoxNeighborhoodFilters)
        self.pushButtonErosion.setObjectName(u"pushButtonErosion")
        self.pushButtonErosion.setGeometry(QRect(10, 210, 151, 23))
        self.pushButtonDilation = QPushButton(self.groupBoxNeighborhoodFilters)
        self.pushButtonDilation.setObjectName(u"pushButtonDilation")
        self.pushButtonDilation.setGeometry(QRect(10, 240, 151, 23))
        self.pushButtonGamma = QPushButton(self.groupBoxNeighborhoodFilters)
        self.pushButtonGamma.setObjectName(u"pushButtonGamma")
        self.pushButtonGamma.setGeometry(QRect(10, 270, 151, 23))
        self.pushButtonPoint = QPushButton(self.groupBoxNeighborhoodFilters)
        self.pushButtonPoint.setObjectName(u"pushButtonPoint")
        self.pushButtonPoint.setGeometry(QRect(10, 300, 151, 23))
        self.pushButtonVerticalStroke = QPushButton(self.groupBoxNeighborhoodFilters)
        self.pushButtonVerticalStroke.setObjectName(u"pushButtonVerticalStroke")
        self.pushButtonVerticalStroke.setGeometry(QRect(10, 330, 151, 22))
        self.pushButtonHorizontalStroke = QPushButton(self.groupBoxNeighborhoodFilters)
        self.pushButtonHorizontalStroke.setObjectName(u"pushButtonHorizontalStroke")
        self.pushButtonHorizontalStroke.setGeometry(QRect(10, 360, 151, 24))
        self.labelHideMessge = QLabel(self.centralWidget)
        self.labelHideMessge.setObjectName(u"labelHideMessge")
        self.labelHideMessge.setGeometry(QRect(270, 850, 151, 31))
        self.textEditHideMessage = QTextEdit(self.centralWidget)
        self.textEditHideMessage.setObjectName(u"textEditHideMessage")
        self.textEditHideMessage.setGeometry(QRect(430, 850, 321, 31))
        self.groupBoxFilterBuilding = QGroupBox(self.centralWidget)
        self.groupBoxFilterBuilding.setObjectName(u"groupBoxFilterBuilding")
        self.groupBoxFilterBuilding.setGeometry(QRect(1130, 400, 351, 161))
        self.spinBoxF00 = QSpinBox(self.groupBoxFilterBuilding)
        self.spinBoxF00.setObjectName(u"spinBoxF00")
        self.spinBoxF00.setGeometry(QRect(30, 30, 88, 24))
        self.spinBoxF00.setMinimum(-9)
        self.spinBoxF00.setMaximum(9)
        self.spinBoxF01 = QSpinBox(self.groupBoxFilterBuilding)
        self.spinBoxF01.setObjectName(u"spinBoxF01")
        self.spinBoxF01.setGeometry(QRect(130, 30, 88, 24))
        self.spinBoxF01.setMinimum(-9)
        self.spinBoxF01.setMaximum(9)
        self.spinBoxF02 = QSpinBox(self.groupBoxFilterBuilding)
        self.spinBoxF02.setObjectName(u"spinBoxF02")
        self.spinBoxF02.setGeometry(QRect(230, 30, 88, 24))
        self.spinBoxF02.setMinimum(-9)
        self.spinBoxF02.setMaximum(9)
        self.spinBoxF10 = QSpinBox(self.groupBoxFilterBuilding)
        self.spinBoxF10.setObjectName(u"spinBoxF10")
        self.spinBoxF10.setGeometry(QRect(30, 60, 88, 24))
        self.spinBoxF10.setMinimum(-9)
        self.spinBoxF10.setMaximum(9)
        self.spinBoxF10.setValue(0)
        self.spinBoxF11 = QSpinBox(self.groupBoxFilterBuilding)
        self.spinBoxF11.setObjectName(u"spinBoxF11")
        self.spinBoxF11.setGeometry(QRect(130, 60, 88, 24))
        self.spinBoxF11.setMinimum(-9)
        self.spinBoxF11.setMaximum(9)
        self.spinBoxF11.setValue(1)
        self.spinBoxF12 = QSpinBox(self.groupBoxFilterBuilding)
        self.spinBoxF12.setObjectName(u"spinBoxF12")
        self.spinBoxF12.setGeometry(QRect(230, 60, 88, 24))
        self.spinBoxF12.setMinimum(-9)
        self.spinBoxF12.setMaximum(9)
        self.spinBoxF20 = QSpinBox(self.groupBoxFilterBuilding)
        self.spinBoxF20.setObjectName(u"spinBoxF20")
        self.spinBoxF20.setGeometry(QRect(30, 90, 88, 24))
        self.spinBoxF20.setMinimum(-9)
        self.spinBoxF20.setMaximum(9)
        self.spinBoxF21 = QSpinBox(self.groupBoxFilterBuilding)
        self.spinBoxF21.setObjectName(u"spinBoxF21")
        self.spinBoxF21.setGeometry(QRect(130, 90, 88, 24))
        self.spinBoxF21.setMinimum(-9)
        self.spinBoxF21.setMaximum(9)
        self.spinBoxF22 = QSpinBox(self.groupBoxFilterBuilding)
        self.spinBoxF22.setObjectName(u"spinBoxF22")
        self.spinBoxF22.setGeometry(QRect(230, 90, 88, 24))
        self.spinBoxF22.setMinimum(-9)
        self.spinBoxF22.setMaximum(9)
        self.pushButtonCreateFilter = QPushButton(self.groupBoxFilterBuilding)
        self.pushButtonCreateFilter.setObjectName(u"pushButtonCreateFilter")
        self.pushButtonCreateFilter.setGeometry(QRect(30, 130, 131, 23))
        self.pushButtonConvolution = QPushButton(self.groupBoxFilterBuilding)
        self.pushButtonConvolution.setObjectName(u"pushButtonConvolution")
        self.pushButtonConvolution.setGeometry(QRect(170, 130, 151, 23))
        self.orderLabel = QLabel(self.centralWidget)
        self.orderLabel.setObjectName(u"orderLabel")
        self.orderLabel.setGeometry(QRect(10, 570, 751, 31))
        self.groupBoxFormat = QGroupBox(self.centralWidget)
        self.groupBoxFormat.setObjectName(u"groupBoxFormat")
        self.groupBoxFormat.setGeometry(QRect(1130, 700, 171, 181))
        self.pushButtonMono = QPushButton(self.groupBoxFormat)
        self.pushButtonMono.setObjectName(u"pushButtonMono")
        self.pushButtonMono.setGeometry(QRect(10, 30, 151, 25))
        self.pushButtonIndexed8 = QPushButton(self.groupBoxFormat)
        self.pushButtonIndexed8.setObjectName(u"pushButtonIndexed8")
        self.pushButtonIndexed8.setGeometry(QRect(10, 60, 151, 25))
        self.pushButtonARGB32 = QPushButton(self.groupBoxFormat)
        self.pushButtonARGB32.setObjectName(u"pushButtonARGB32")
        self.pushButtonARGB32.setGeometry(QRect(10, 90, 151, 25))
        self.pushButtonGrayscale8 = QPushButton(self.groupBoxFormat)
        self.pushButtonGrayscale8.setObjectName(u"pushButtonGrayscale8")
        self.pushButtonGrayscale8.setGeometry(QRect(10, 120, 151, 25))
        self.pushButtonReduceSize = QPushButton(self.groupBoxFormat)
        self.pushButtonReduceSize.setObjectName(u"pushButtonReduceSize")
        self.pushButtonReduceSize.setGeometry(QRect(10, 150, 151, 25))
        self.groupBoxHistoric = QGroupBox(self.centralWidget)
        self.groupBoxHistoric.setObjectName(u"groupBoxHistoric")
        self.groupBoxHistoric.setGeometry(QRect(1310, 570, 171, 121))
        self.lcdHisto = QLCDNumber(self.groupBoxHistoric)
        self.lcdHisto.setObjectName(u"lcdHisto")
        self.lcdHisto.setGeometry(QRect(20, 30, 121, 31))
        self.lcdHisto.setStyleSheet(u"#lcdHisto {\n"
" color: red;\n"
" }")
        MainWindow.setCentralWidget(self.centralWidget)
        self.menuBar = QMenuBar(MainWindow)
        self.menuBar.setObjectName(u"menuBar")
        self.menuBar.setGeometry(QRect(0, 0, 1502, 33))
        self.menuFile = QMenu(self.menuBar)
        self.menuFile.setObjectName(u"menuFile")
        self.menuAbout = QMenu(self.menuBar)
        self.menuAbout.setObjectName(u"menuAbout")
        self.menuHelp = QMenu(self.menuBar)
        self.menuHelp.setObjectName(u"menuHelp")
        self.languageAct = QMenu(self.menuHelp)
        self.languageAct.setObjectName(u"languageAct")
        icon14 = QIcon()
        icon14.addFile(u"Icons/Language.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.languageAct.setIcon(icon14)
        MainWindow.setMenuBar(self.menuBar)
        self.mainToolBar = QToolBar(MainWindow)
        self.mainToolBar.setObjectName(u"mainToolBar")
        MainWindow.addToolBar(Qt.ToolBarArea.TopToolBarArea, self.mainToolBar)
        self.statusBar = QStatusBar(MainWindow)
        self.statusBar.setObjectName(u"statusBar")
        MainWindow.setStatusBar(self.statusBar)

        self.menuBar.addAction(self.menuFile.menuAction())
        self.menuBar.addAction(self.menuAbout.menuAction())
        self.menuBar.addAction(self.menuHelp.menuAction())
        self.menuFile.addAction(self.openAct)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.openImg2Act)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.copy1Act)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.copy2Act)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.swapAct)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.saveAct)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.printAct)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.closeAct)
        self.menuAbout.addAction(self.aboutAct)
        self.menuHelp.addAction(self.operatingModeAct)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.adjustmentAct)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.languageAct.menuAction())
        self.languageAct.addAction(self.frenchAct)
        self.languageAct.addSeparator()
        self.languageAct.addAction(self.englishAct)

        self.retranslateUi(MainWindow)
        self.sliderA.valueChanged.connect(self.LcdA.display)
        self.sliderB.valueChanged.connect(self.LcdB.display)
        self.sliderC.valueChanged.connect(self.LcdC.display)
        self.sliderD.valueChanged.connect(self.LcdD.display)
        self.sliderE.valueChanged.connect(self.lcdE.display)
        self.sliderF.valueChanged.connect(self.lcdF.display)

        self.tabWidget.setCurrentIndex(4)


        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"Image Processing with Python", None))
        self.openAct.setText(QCoreApplication.translate("MainWindow", u"Open", None))
        self.saveAct.setText(QCoreApplication.translate("MainWindow", u"Save", None))
        self.closeAct.setText(QCoreApplication.translate("MainWindow", u"Close", None))
        self.aboutAct.setText(QCoreApplication.translate("MainWindow", u"Application", None))
        self.operatingModeAct.setText(QCoreApplication.translate("MainWindow", u"Procedure", None))
        self.adjustmentAct.setText(QCoreApplication.translate("MainWindow", u"Focus", None))
        self.openImg2Act.setText(QCoreApplication.translate("MainWindow", u"Open second image", None))
        self.printAct.setText(QCoreApplication.translate("MainWindow", u"Print", None))
        self.swapAct.setText(QCoreApplication.translate("MainWindow", u"Swap", None))
        self.copy1Act.setText(QCoreApplication.translate("MainWindow", u"Copy 1 on 2", None))
        self.copy2Act.setText(QCoreApplication.translate("MainWindow", u"Copy 2 on 1", None))
        self.frenchAct.setText(QCoreApplication.translate("MainWindow", u"Fran\u00e7ais", None))
        self.englishAct.setText(QCoreApplication.translate("MainWindow", u"Anglais", None))
        self.groupBoxLocalFilters.setTitle(QCoreApplication.translate("MainWindow", u"Local Filters", None))
#if QT_CONFIG(tooltip)
        self.pushButtonLuminance.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Renders the image in black and white</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonLuminance.setText(QCoreApplication.translate("MainWindow", u"Luminance", None))
#if QT_CONFIG(tooltip)
        self.pushButtonWindowing.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Processes the image by windowing (Narrows the spectrum)</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonWindowing.setText(QCoreApplication.translate("MainWindow", u"Windowing", None))
#if QT_CONFIG(tooltip)
        self.pushButtonThresholding.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Strengthens the color level above a threshold (from 1 to 255) otherwise cancels them</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonThresholding.setText(QCoreApplication.translate("MainWindow", u"Thresholding", None))
#if QT_CONFIG(tooltip)
        self.pushButtonBinarization.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Maximizes the color level above a threshold (from 1 to 255) otherwise cancels them</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonBinarization.setText(QCoreApplication.translate("MainWindow", u"Binarization", None))
#if QT_CONFIG(tooltip)
        self.pushButtonNegative.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Restores the negative of the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonNegative.setText(QCoreApplication.translate("MainWindow", u"Negative", None))
#if QT_CONFIG(tooltip)
        self.pushButtonRedFilter.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Selects only the red color component of the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonRedFilter.setText(QCoreApplication.translate("MainWindow", u"Red Filter", None))
#if QT_CONFIG(tooltip)
        self.pushButtonGreenFilter.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Selects only the green color component of the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonGreenFilter.setText(QCoreApplication.translate("MainWindow", u"Green Filter", None))
#if QT_CONFIG(tooltip)
        self.pushButtonBlueFilter.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Selects only the blue color component of the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonBlueFilter.setText(QCoreApplication.translate("MainWindow", u"Blue Filter", None))
#if QT_CONFIG(tooltip)
        self.pushButtonTransparency.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Changes the opacity or transparency of the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonTransparency.setText(QCoreApplication.translate("MainWindow", u"Transparency", None))
#if QT_CONFIG(tooltip)
        self.pushButtonBrightness.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Changes the brightness of the image from 1 to 99</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonBrightness.setText(QCoreApplication.translate("MainWindow", u"Brightnesss", None))
#if QT_CONFIG(tooltip)
        self.pushButtonContrast.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Changes the contrast of the image from 1 to 99</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonContrast.setText(QCoreApplication.translate("MainWindow", u"Contrast", None))
#if QT_CONFIG(tooltip)
        self.pushButtonRGB.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Modifies the color components red, green and blue de l'image from 1 to 99)</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonRGB.setText(QCoreApplication.translate("MainWindow", u"RGB", None))
#if QT_CONFIG(tooltip)
        self.pushButtonRedEffect.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Keeps only the red components of the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonRedEffect.setText(QCoreApplication.translate("MainWindow", u"Red Effect", None))
#if QT_CONFIG(tooltip)
        self.pushButtonGreyLevel.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Displays the image with 2 to 8 gray levels</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonGreyLevel.setText(QCoreApplication.translate("MainWindow", u"Grey Level", None))
#if QT_CONFIG(tooltip)
        self.pushButtonColorLevel.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Displays the image with 2 to 8 color levels</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonColorLevel.setText(QCoreApplication.translate("MainWindow", u"Color Level", None))
#if QT_CONFIG(tooltip)
        self.pushButtonFalseColors.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Changes the color components of the image by permutation</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonFalseColors.setText(QCoreApplication.translate("MainWindow", u"False Colors", None))
#if QT_CONFIG(tooltip)
        self.pushButtonSepia.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Gives a sepia tint to the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonSepia.setText(QCoreApplication.translate("MainWindow", u"Sepia", None))
        self.labelA.setText(QCoreApplication.translate("MainWindow", u"A:", None))
        self.labelB.setText(QCoreApplication.translate("MainWindow", u"B:", None))
        self.labelC.setText(QCoreApplication.translate("MainWindow", u"C:", None))
        self.labelD.setText(QCoreApplication.translate("MainWindow", u"D:", None))
        self.labelWidthImage1.setText(QCoreApplication.translate("MainWindow", u"Width of image 1", None))
        self.labelHeightImage1.setText(QCoreApplication.translate("MainWindow", u"Height of image 1", None))
        self.labelDepthImage1.setText(QCoreApplication.translate("MainWindow", u"Depth of image 1", None))
        self.imageLabel.setText(QCoreApplication.translate("MainWindow", u"To view the image : menu File/Open", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), QCoreApplication.translate("MainWindow", u"Image 1", None))
        self.image2Label.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p align=\"center\">Seconde image par dessus</p></body></html>", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), QCoreApplication.translate("MainWindow", u"Image 2", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), QCoreApplication.translate("MainWindow", u"Focus", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_7), QCoreApplication.translate("MainWindow", u"Histogram", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), QCoreApplication.translate("MainWindow", u"Procedure", None))
        self.labelE.setText(QCoreApplication.translate("MainWindow", u"E:", None))
        self.labelF.setText(QCoreApplication.translate("MainWindow", u"F:", None))
        self.labelMessage.setText(QCoreApplication.translate("MainWindow", u"Message : ", None))
        self.labelPointsNumber.setText(QCoreApplication.translate("MainWindow", u"Points Number", None))
        self.labelSeed.setText(QCoreApplication.translate("MainWindow", u"Seed", None))
        self.copyright.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Copyright 2017-2025 Alain the cat  </p></body></html>", None))
        self.labelWidthImage2.setText(QCoreApplication.translate("MainWindow", u"Width of image 2", None))
        self.labelHeightImage2.setText(QCoreApplication.translate("MainWindow", u"Height of image 2", None))
        self.labelDepthImage2.setText(QCoreApplication.translate("MainWindow", u"Depth of image 2", None))
        self.Size.setText(QCoreApplication.translate("MainWindow", u"Filter Size", None))
        self.groupBoxHistogram.setTitle(QCoreApplication.translate("MainWindow", u"Histogram  of image 1", None))
        self.radioButtonRed.setText(QCoreApplication.translate("MainWindow", u"Red", None))
        self.radioButtonGreen.setText(QCoreApplication.translate("MainWindow", u"Green", None))
        self.radioButtonBlue.setText(QCoreApplication.translate("MainWindow", u"Blue", None))
        self.radioButtonLuminance.setText(QCoreApplication.translate("MainWindow", u"Luminance", None))
#if QT_CONFIG(tooltip)
        self.pushButtonHistogram.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Displays the histogram of the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonHistogram.setText(QCoreApplication.translate("MainWindow", u"Histogram", None))
        self.groupBoxGeometricTransformation.setTitle(QCoreApplication.translate("MainWindow", u"Geometric Transformation", None))
#if QT_CONFIG(tooltip)
        self.pushButtonVerticalSymmetry.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Performs a  vertical symmetry of the image)</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonVerticalSymmetry.setText(QCoreApplication.translate("MainWindow", u"Vertical Symmetry", None))
#if QT_CONFIG(tooltip)
        self.pushButtonHorizontalSymmetry.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Performs a horizontal symmetry of the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonHorizontalSymmetry.setText(QCoreApplication.translate("MainWindow", u"Horizontal Symmetry", None))
#if QT_CONFIG(tooltip)
        self.pushButtonRotation90.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Rotates the image 90\u00b0 to the right</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonRotation90.setText(QCoreApplication.translate("MainWindow", u" Rotation 90\u00b0", None))
#if QT_CONFIG(tooltip)
        self.pushButtonDiagonalization.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Diagonalizes the image in a playing card manner</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonDiagonalization.setText(QCoreApplication.translate("MainWindow", u"Diagonalization", None))
#if QT_CONFIG(tooltip)
        self.pushButtonMedallion.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Puts the image in medallion</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonMedallion.setText(QCoreApplication.translate("MainWindow", u"Medallion", None))
#if QT_CONFIG(tooltip)
        self.pushButtonTranslation.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Translates the image vertically and horizontally</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonTranslation.setText(QCoreApplication.translate("MainWindow", u"Translation", None))
#if QT_CONFIG(tooltip)
        self.pushButtonZoomPlus.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Enlarges the image by a factor 2</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonZoomPlus.setText(QCoreApplication.translate("MainWindow", u"Zoom +", None))
#if QT_CONFIG(tooltip)
        self.pushButtonZoomLess.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Reduces the image by a factor 2</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonZoomLess.setText(QCoreApplication.translate("MainWindow", u"Zoom -", None))
#if QT_CONFIG(tooltip)
        self.pushButtonRotation.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Perform a theta radian rotation to the right of the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonRotation.setText(QCoreApplication.translate("MainWindow", u"Rotation", None))
#if QT_CONFIG(tooltip)
        self.pushButtonZoomPlusBilinear.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Enlarges the image by a factor 2 in a smooth way (bilinear method)</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonZoomPlusBilinear.setText(QCoreApplication.translate("MainWindow", u"Zoom bilin\u00e9aire +", None))
#if QT_CONFIG(tooltip)
        self.pushButtonCrop.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Crops the image in width and height</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonCrop.setText(QCoreApplication.translate("MainWindow", u"Crop", None))
#if QT_CONFIG(tooltip)
        self.pushButtonValidation.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Validates the previous operation</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonValidation.setText(QCoreApplication.translate("MainWindow", u"Validate", None))
        self.groupBoxImagesOverlay.setTitle(QCoreApplication.translate("MainWindow", u"Images Overlay", None))
#if QT_CONFIG(tooltip)
        self.pushButtonRedBackground.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Gives a red background with the dimensions of the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonRedBackground.setText(QCoreApplication.translate("MainWindow", u"Red Background", None))
#if QT_CONFIG(tooltip)
        self.pushButtonGreenBackground.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Gives a green background with the dimensions of the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonGreenBackground.setText(QCoreApplication.translate("MainWindow", u"Green Background", None))
#if QT_CONFIG(tooltip)
        self.pushButtonBlueBackground.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Gives a blue background with the dimensions of the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonBlueBackground.setText(QCoreApplication.translate("MainWindow", u"Blue Background", None))
#if QT_CONFIG(tooltip)
        self.pushButtonGreenScreen.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Overlays image 1 onto image 2 (the green background of image 1 is ignored)</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonGreenScreen.setText(QCoreApplication.translate("MainWindow", u"Green Screen", None))
#if QT_CONFIG(tooltip)
        self.pushButtonAnaglyph.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Creates an anaglyph by superimposing image 2 (right) filtered in blue and green on image 1 (left) filtered in red</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonAnaglyph.setText(QCoreApplication.translate("MainWindow", u"Anaglyph", None))
#if QT_CONFIG(tooltip)
        self.pushButtonOverlay1on2.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Superpose l'image 1 sur l'image 2 par transparence</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonOverlay1on2.setText(QCoreApplication.translate("MainWindow", u"Overlay 1 on 2", None))
#if QT_CONFIG(tooltip)
        self.pushButtonWhiteBackground.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Gives a white background with the dimensions of the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonWhiteBackground.setText(QCoreApplication.translate("MainWindow", u"White Background", None))
#if QT_CONFIG(tooltip)
        self.pushButtonBlackBackground.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Gives a black background with the dimensions of the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonBlackBackground.setText(QCoreApplication.translate("MainWindow", u"Black Background", None))
#if QT_CONFIG(tooltip)
        self.pushButtonTintBackground.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Gives a tinted background configurable with the dimensions of the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonTintBackground.setText(QCoreApplication.translate("MainWindow", u"Tint Background", None))
        self.groupBoxFocus.setTitle(QCoreApplication.translate("MainWindow", u"Focus", None))
#if QT_CONFIG(tooltip)
        self.pushButtonTVPattern.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Displays a color TV pattern  16x12 on 4 bytes</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonTVPattern.setText(QCoreApplication.translate("MainWindow", u"TV Pattern", None))
#if QT_CONFIG(tooltip)
        self.pushButtonBWTVPattern.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Displays a black and white TV pattern 16x12 on 1 byte (384 format)</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonBWTVPattern.setText(QCoreApplication.translate("MainWindow", u"B and W TV Pattern", None))
#if QT_CONFIG(tooltip)
        self.pushButtonDisplayCode.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Provides the hex code of the image in the &quot;Focus&quot; tab</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonDisplayCode.setText(QCoreApplication.translate("MainWindow", u"Display code", None))
#if QT_CONFIG(tooltip)
        self.pushButtonTest1.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Testing a function under development</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonTest1.setText(QCoreApplication.translate("MainWindow", u"Test 1 function", None))
#if QT_CONFIG(tooltip)
        self.pushButtonTest2.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Testing a function under development</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonTest2.setText(QCoreApplication.translate("MainWindow", u"Test 2 Function", None))
#if QT_CONFIG(tooltip)
        self.pushButtonTest4.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><html><head/><body><p>Testing a function under development</p></body></html></p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonTest4.setText(QCoreApplication.translate("MainWindow", u"Test 4 Function", None))
#if QT_CONFIG(tooltip)
        self.pushButtonTest3.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Testing a function under development</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonTest3.setText(QCoreApplication.translate("MainWindow", u"Test 3 Function", None))
#if QT_CONFIG(tooltip)
        self.pushButtonDepth1to4.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Increases the depth of the image from 1 to 4</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonDepth1to4.setText(QCoreApplication.translate("MainWindow", u"Depth 1 to 4", None))
#if QT_CONFIG(tooltip)
        self.pushButtonDepth4to1.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Reduces the depth of the image from 4 to 1</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonDepth4to1.setText(QCoreApplication.translate("MainWindow", u"Depth 4 to 1", None))
        self.groupBoxEncryption.setTitle(QCoreApplication.translate("MainWindow", u"Encryption", None))
#if QT_CONFIG(tooltip)
        self.pushButtonPixellation.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Pixelates the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonPixellation.setText(QCoreApplication.translate("MainWindow", u"Pixellation", None))
#if QT_CONFIG(tooltip)
        self.pushButtonEncryption.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Encrypts an image with a configurable line offset from 0 to 20</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonEncryption.setText(QCoreApplication.translate("MainWindow", u"Encryption", None))
#if QT_CONFIG(tooltip)
        self.pushButtonFixedEncryption.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Encrypts an image with rows shifted from random numbers calculated from a fixed &quot;seed&quot; from 10 to 100</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonFixedEncryption.setText(QCoreApplication.translate("MainWindow", u"Fixed Encryption", None))
#if QT_CONFIG(tooltip)
        self.pushButtonDecryption.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Encrypts an image with rows shifted from random numbers calculated from a fixed &quot;seed&quot; from 10 to 100</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonDecryption.setText(QCoreApplication.translate("MainWindow", u"Decryption", None))
#if QT_CONFIG(tooltip)
        self.pushButtonHideSecret.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Hides the secret  monochrome image into the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonHideSecret.setText(QCoreApplication.translate("MainWindow", u"Hide the secret", None))
#if QT_CONFIG(tooltip)
        self.pushButtonShowSecret.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Shows a secret  monochrome image from the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonShowSecret.setText(QCoreApplication.translate("MainWindow", u"Show the secret", None))
#if QT_CONFIG(tooltip)
        self.pushButtonSteganography.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Hides the secret message into the image (Steganography)</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonSteganography.setText(QCoreApplication.translate("MainWindow", u"Steganography", None))
#if QT_CONFIG(tooltip)
        self.pushButtonShowText.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Shows the secret message into the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonShowText.setText(QCoreApplication.translate("MainWindow", u"Show the text", None))
#if QT_CONFIG(tooltip)
        self.pushButtonAsciiFile.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Converts the image to ASCII text to save as a text file (.txt)</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonAsciiFile.setText(QCoreApplication.translate("MainWindow", u"Ascii File", None))
#if QT_CONFIG(tooltip)
        self.pushButtonPuzzle.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Displays a puzzle of the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonPuzzle.setText(QCoreApplication.translate("MainWindow", u"Puzzle", None))
        self.groupBoxNoiseSimulator.setTitle(QCoreApplication.translate("MainWindow", u"Noise Simulator", None))
#if QT_CONFIG(tooltip)
        self.pushButtonWhiteNoise.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Displays the image with with white noise</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonWhiteNoise.setText(QCoreApplication.translate("MainWindow", u"White Noise", None))
#if QT_CONFIG(tooltip)
        self.pushButtonPepperAndSaltNoise.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Displays the image with with pepper and salt noise</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonPepperAndSaltNoise.setText(QCoreApplication.translate("MainWindow", u"Pepper and Salt Noise", None))
#if QT_CONFIG(tooltip)
        self.pushButtonGaussianNoise.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Displays the image with with gaussian noise</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonGaussianNoise.setText(QCoreApplication.translate("MainWindow", u"Gaussian Noise", None))
        self.groupBoxOrder.setTitle(QCoreApplication.translate("MainWindow", u"Order", None))
#if QT_CONFIG(tooltip)
        self.pushButtonUndo.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Allows you to cancel the previous operation</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonUndo.setText(QCoreApplication.translate("MainWindow", u"UNDO", None))
#if QT_CONFIG(tooltip)
        self.pushButtonReset.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Resets the image loaded before the changes</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonReset.setText(QCoreApplication.translate("MainWindow", u"RESET", None))
        self.groupBoxNeighborhoodFilters.setTitle(QCoreApplication.translate("MainWindow", u"Neighborhood Filters", None))
#if QT_CONFIG(tooltip)
        self.pushButtonIntegratingFilter.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Assigns for each pixel the average of the color of the 9 adjacent pixels</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonIntegratingFilter.setText(QCoreApplication.translate("MainWindow", u"Integrating Filter", None))
#if QT_CONFIG(tooltip)
        self.pushButtonMedianFilter.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Assigns for each pixel the median of the color of the 9 adjacent pixels</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonMedianFilter.setText(QCoreApplication.translate("MainWindow", u"Median Filter", None))
#if QT_CONFIG(tooltip)
        self.pushButtonGaussianFilter.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Softens the image with a Gaussian filter</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonGaussianFilter.setText(QCoreApplication.translate("MainWindow", u"Gaussian Filter", None))
#if QT_CONFIG(tooltip)
        self.pushButtonHorizontalGradient.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Displays significant brightness variations horizontally</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonHorizontalGradient.setText(QCoreApplication.translate("MainWindow", u"Horizontal Gradient", None))
#if QT_CONFIG(tooltip)
        self.pushButtonVerticalGradient.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Displays significant brightness variations vertically</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonVerticalGradient.setText(QCoreApplication.translate("MainWindow", u"Vertical Gradient", None))
#if QT_CONFIG(tooltip)
        self.pushButtonBorderDetect.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Detects borders by significant variation in brightness</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonBorderDetect.setText(QCoreApplication.translate("MainWindow", u"Borders Detect", None))
#if QT_CONFIG(tooltip)
        self.pushButtonErosion.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Applies an image erosion filter</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonErosion.setText(QCoreApplication.translate("MainWindow", u"Erosion", None))
#if QT_CONFIG(tooltip)
        self.pushButtonDilation.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Applies an image dilation filter</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonDilation.setText(QCoreApplication.translate("MainWindow", u"Dilation", None))
#if QT_CONFIG(tooltip)
        self.pushButtonGamma.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Applies an image gamma filter</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonGamma.setText(QCoreApplication.translate("MainWindow", u"Gamma", None))
#if QT_CONFIG(tooltip)
        self.pushButtonPoint.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Displays the image with a greater or lesser number of black dots</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonPoint.setText(QCoreApplication.translate("MainWindow", u"Point", None))
#if QT_CONFIG(tooltip)
        self.pushButtonVerticalStroke.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Displays the image with a greater or lesser number of vertical black lines</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonVerticalStroke.setText(QCoreApplication.translate("MainWindow", u"Vertical Stroke", None))
#if QT_CONFIG(tooltip)
        self.pushButtonHorizontalStroke.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Displays the image with a greater or lesser number of horizontal black lines</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonHorizontalStroke.setText(QCoreApplication.translate("MainWindow", u"Horizontal Stroke", None))
        self.labelHideMessge.setText(QCoreApplication.translate("MainWindow", u"Message to hide:", None))
        self.groupBoxFilterBuilding.setTitle(QCoreApplication.translate("MainWindow", u"Filter Building", None))
#if QT_CONFIG(tooltip)
        self.pushButtonCreateFilter.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Creates a filter for image convolution</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonCreateFilter.setText(QCoreApplication.translate("MainWindow", u"Create Filter", None))
#if QT_CONFIG(tooltip)
        self.pushButtonConvolution.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Performs the convolution of the image with the filter constructed above</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonConvolution.setText(QCoreApplication.translate("MainWindow", u"Convolution", None))
        self.orderLabel.setText(QCoreApplication.translate("MainWindow", u"<strong>Action requested: </strong>", None))
        self.groupBoxFormat.setTitle(QCoreApplication.translate("MainWindow", u"Format", None))
#if QT_CONFIG(tooltip)
        self.pushButtonMono.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Transforms the RGBA image to monocolor code</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonMono.setText(QCoreApplication.translate("MainWindow", u"Mono", None))
#if QT_CONFIG(tooltip)
        self.pushButtonIndexed8.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Transforms the RGBA image to indexed8 code</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonIndexed8.setText(QCoreApplication.translate("MainWindow", u"Indexed8", None))
#if QT_CONFIG(tooltip)
        self.pushButtonARGB32.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Transforms the image to ARGB32 code</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonARGB32.setText(QCoreApplication.translate("MainWindow", u"ARGB32", None))
#if QT_CONFIG(tooltip)
        self.pushButtonGrayscale8.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Transforms the RGBA encoded image to grayscale8 </p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonGrayscale8.setText(QCoreApplication.translate("MainWindow", u"Grayscale8", None))
#if QT_CONFIG(tooltip)
        self.pushButtonReduceSize.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Reduces the size of the image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonReduceSize.setText(QCoreApplication.translate("MainWindow", u"Reduce size", None))
        self.groupBoxHistoric.setTitle(QCoreApplication.translate("MainWindow", u"Historic", None))
#if QT_CONFIG(tooltip)
        self.lcdHisto.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Displays the number of images saved in history</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.menuFile.setTitle(QCoreApplication.translate("MainWindow", u"File", None))
        self.menuAbout.setTitle(QCoreApplication.translate("MainWindow", u"About", None))
        self.menuHelp.setTitle(QCoreApplication.translate("MainWindow", u"Help", None))
        self.languageAct.setTitle(QCoreApplication.translate("MainWindow", u"Language", None))
    # retranslateUi

